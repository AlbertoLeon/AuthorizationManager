@model IEnumerable<AuthorizationManager.Core.FromThinktectureIdentityServer.EntityFramework.Entities.Client>

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

<div class="panel panel-default">
    <div class="panel-heading">Create a client</div>
    <div class="panel-body">
        <div class="col-md-12 column">
            <div class="list-group">
                <a href="@Url.Action("AddWithImplicitFlow")" class="list-group-item">
                    <h4 class="list-group-item-heading">Implicit</h4>
                    <p class="list-group-item-text">A client whos code runs directly in brower linke SPAs. It doesn't need to send the client secret.</p>
                </a>
                <a href="@Url.Action("AddWithAuthorizationCodeFlow")" class="list-group-item">
                    <h4 class="list-group-item-heading">Authorization Code</h4>
                    <p class="list-group-item-text">A client whos code runs in a server side like PHP, Java, Ruby, ASP.NET MVC, ASP.NET Webforms</p>
                </a>
                <a href="@Url.Action("AddWithClientCredentialsFlow")" class="list-group-item">
                    <h4 class="list-group-item-heading">Client Credentials</h4>
                    <p class="list-group-item-text">A client that is an allowed application that doesn't need a user logged to request resources. For security it must run in server.</p>
                </a>
            </div>
        </div>
    </div>
</div>
<div class="row clearfix">
    <div class="col-md-12 column">
        <table class="table">
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Enabled)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ClientName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ClientUri)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Flow)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.EnableLocalLogin)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.IncludeJwtId)
                </th>
                <th></th>
            </tr>

            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Enabled)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ClientName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ClientUri)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Flow)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.AlwaysSendClientClaims)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.PrefixClientClaims)
                    </td>
                    <td>
                        @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                        @Html.ActionLink("Scopes Restrictions", "EditRestrictionScope", new { id = item.Id }) |
                        @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                        @Html.ActionLink("Delete", "Delete", new { id = item.Id }) |
                        @if (!item.Enabled)
                        {
                            @Html.ActionLink("Enable", "Enable", new {id = item.Id})
                        }
                        else
                        {
                            @Html.ActionLink("Disable", "Disable", new { id = item.Id })
                        }
                         |
                    </td>
                </tr>
            }

        </table>
    </div>
</div>
